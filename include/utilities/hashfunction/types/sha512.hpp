#pragma once

#include <utilities/hashfunction/hashfunction.hpp>

namespace love
{
    class SHA512 : public HashFunction
    {
      public:
        bool IsSupported(Function function) const override
        {
            return function == FUNCTION_SHA384 || function == FUNCTION_SHA512;
        };

        void Hash(Function function, const char* input, uint64_t length,
                  Value& output) const override;

      private:
        static constexpr uint64_t initial384[0x08] = {
            0XCBBB9D5DC1059ED8, 0X629A292A367CD507, 0X9159015A3070DD17,
            0X152FECD8F70E5939, 0X67332667FFC00B31, 0X8EB44A8768581511,
            0XDB0C2E0D64F98FA7, 0X47B5481DBEFA4FA4
        };

        static constexpr uint64_t initial512[0x08] = {
            0X6A09E667F3BCC908, 0XBB67AE8584CAA73B, 0X3C6EF372FE94F82B,
            0XA54FF53A5F1D36F1, 0X510E527FADE682D1, 0X9B05688C2B3E6C1F,
            0X1F83D9ABFB41BD6B, 0X5BE0CD19137E2179
        };

        static constexpr uint64_t constants[0x50] = {
            0X428A2F98D728AE22, 0X7137449123EF65CD, 0XB5C0FBCFEC4D3B2F,
            0XE9B5DBA58189DBBC, 0X3956C25BF348B538, 0X59F111F1B605D019,
            0X923F82A4AF194F9B, 0XAB1C5ED5DA6D8118, 0XD807AA98A3030242,
            0X12835B0145706FBE, 0X243185BE4EE4B28C, 0X550C7DC3D5FFB4E2,
            0X72BE5D74F27B896F, 0X80DEB1FE3B1696B1, 0X9BDC06A725C71235,
            0XC19BF174CF692694, 0XE49B69C19EF14AD2, 0XEFBE4786384F25E3,
            0X0FC19DC68B8CD5B5, 0X240CA1CC77AC9C65, 0X2DE92C6F592B0275,
            0X4A7484AA6EA6E483, 0X5CB0A9DCBD41FBD4, 0X76F988DA831153B5,
            0X983E5152EE66DFAB, 0XA831C66D2DB43210, 0XB00327C898FB213F,
            0XBF597FC7BEEF0EE4, 0XC6E00BF33DA88FC2, 0XD5A79147930AA725,
            0X06CA6351E003826F, 0X142929670A0E6E70, 0X27B70A8546D22FFC,
            0X2E1B21385C26C926, 0X4D2C6DFC5AC42AED, 0X53380D139D95B3DF,
            0X650A73548BAF63DE, 0X766A0ABB3C77B2A8, 0X81C2C92E47EDAEE6,
            0X92722C851482353B, 0XA2BFE8A14CF10364, 0XA81A664BBC423001,
            0XC24B8B70D0F89791, 0XC76C51A30654BE30, 0XD192E819D6EF5218,
            0XD69906245565A910, 0XF40E35855771202A, 0X106AA07032BBD1B8,
            0X19A4C116B8D2D0C8, 0X1E376C085141AB53, 0X2748774CDF8EEB99,
            0X34B0BCB5E19B48A8, 0X391C0CB3C5C95A63, 0X4ED8AA4AE3418ACB,
            0X5B9CCA4F7763E373, 0X682E6FF3D6B2B8A3, 0X748F82EE5DEFB2FC,
            0X78A5636F43172F60, 0X84C87814A1F0AB72, 0X8CC702081A6439EC,
            0X90BEFFFA23631E28, 0XA4506CEBDE82BDE9, 0XBEF9A3F7B2C67915,
            0XC67178F2E372532B, 0XCA273ECEEA26619C, 0XD186B8C721C0C207,
            0XEADA7DD6CDE0EB1E, 0XF57D4F7FEE6ED178, 0X06F067AA72176FBA,
            0X0A637DC5A2C898A6, 0X113F9804BEF90DAE, 0X1B710B35131C471B,
            0X28DB77F523047D84, 0X32CAAB7B40C72493, 0X3C9EBE0A15C9BEBC,
            0X431D67C49C100D4C, 0X4CC5D4BECB3E42B6, 0X597F299CFC657E2A,
            0X5FCB6FAB3AD6FAEC, 0X6C44198C4A475817
        };
    };
} // namespace love
